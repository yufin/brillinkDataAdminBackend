definitions:
  antd.Pages:
    properties:
      current:
        type: integer
      data:
        description: response data
      errorCode:
        description: code for errorType
        type: string
      errorMessage:
        description: message display to user
        type: string
      host:
        description: 'onvenient for backend Troubleshooting: host of current access
          server'
        type: string
      pageSize:
        type: integer
      showType:
        description: error display type： 0 silent; 1 message.warn; 2 message.error;
          4 notification; 9 page
        type: integer
      status:
        type: string
      success:
        description: if request is success
        type: boolean
      total:
        type: integer
      traceId:
        description: 'Convenient for back-end Troubleshooting: unique request ID'
        type: string
    type: object
  antd.Response:
    properties:
      errorCode:
        description: code for errorType
        type: string
      errorMessage:
        description: message display to user
        type: string
      host:
        description: 'onvenient for backend Troubleshooting: host of current access
          server'
        type: string
      showType:
        description: error display type： 0 silent; 1 message.warn; 2 message.error;
          4 notification; 9 page
        type: integer
      status:
        type: string
      success:
        description: if request is success
        type: boolean
      traceId:
        description: 'Convenient for back-end Troubleshooting: unique request ID'
        type: string
    type: object
  dto.City:
    properties:
      key:
        type: string
      label:
        type: string
    type: object
  dto.Edge:
    properties:
      data:
        additionalProperties: {}
        type: object
      id:
        type: string
      label:
        type: string
      source:
        type: string
      target:
        type: string
    type: object
  dto.Geographic:
    properties:
      city:
        $ref: '#/definitions/dto.City'
      province:
        $ref: '#/definitions/dto.Province'
    type: object
  dto.GetSetSysConfigReq:
    properties:
      configKey:
        type: string
      configValue:
        type: string
    type: object
  dto.LinkNode:
    properties:
      data:
        additionalProperties: {}
        type: object
      id:
        type: string
      labels:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  dto.Net:
    properties:
      edges:
        items:
          $ref: '#/definitions/dto.Edge'
        type: array
      nodes:
        items:
          $ref: '#/definitions/dto.LinkNode'
        type: array
    type: object
  dto.PassWord:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  dto.Personal:
    properties:
      access:
        type: string
      accessList:
        items:
          type: string
        type: array
      address:
        type: string
      avatar:
        type: string
      country:
        type: string
      email:
        type: string
      geographic:
        $ref: '#/definitions/dto.Geographic'
      group:
        type: string
      mobile:
        type: string
      name:
        type: string
      notifyCount:
        type: integer
      phone:
        type: string
      signature:
        type: string
      tags:
        items:
          $ref: '#/definitions/dto.Tag'
        type: array
      title:
        type: string
      unreadCount:
        type: integer
      userid:
        type: string
    type: object
  dto.Province:
    properties:
      key:
        type: string
      label:
        type: string
    type: object
  dto.ResetSysUserPwdReq:
    properties:
      createBy:
        type: integer
      password:
        type: string
      updateBy:
        type: integer
      userId:
        description: 用户ID
        type: integer
    type: object
  dto.RoleDataScopeReq:
    properties:
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      roleId:
        type: integer
    required:
    - dataScope
    - roleId
    type: object
  dto.SysApiDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysApiUpdateReq:
    properties:
      createBy:
        type: integer
      handle:
        type: string
      id:
        description: 编码
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      type:
        type: string
      updateBy:
        type: integer
    type: object
  dto.SysConfigByKeyReq:
    properties:
      configKey:
        type: string
    type: object
  dto.SysConfigControl:
    properties:
      configKey:
        type: string
      configModule:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      createBy:
        type: integer
      id:
        description: 编码
        type: integer
      isFrontend:
        type: boolean
      isSecret:
        type: boolean
      remark:
        type: string
      updateBy:
        type: integer
    type: object
  dto.SysDeptDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDeptInsertReq:
    properties:
      createBy:
        type: integer
      deptId:
        description: 编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDeptUpdateReq:
    properties:
      createBy:
        type: integer
      deptId:
        description: 编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictDataDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDictDataGetAllResp:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.SysDictDataInsertReq:
    properties:
      createBy:
        type: integer
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictDataUpdateReq:
    properties:
      createBy:
        type: integer
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      id:
        type: integer
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictTypeDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysDictTypeInsertReq:
    properties:
      createBy:
        type: integer
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysDictTypeUpdateReq:
    properties:
      createBy:
        type: integer
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysJobInsertReq:
    properties:
      args:
        type: string
      concurrent:
        type: integer
      createBy:
        type: integer
      cronExpression:
        type: string
      entryId:
        type: integer
      invokeTarget:
        type: string
      jobGroup:
        type: string
      jobName:
        type: string
      jobType:
        type: integer
      misfirePolicy:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysJobUpdateReq:
    properties:
      args:
        type: string
      concurrent:
        type: integer
      createBy:
        type: integer
      cronExpression:
        type: string
      entryId:
        type: integer
      invokeTarget:
        type: string
      jobGroup:
        type: string
      jobId:
        type: integer
      jobName:
        type: string
      jobType:
        type: integer
      misfirePolicy:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysLoginLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysMenuDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysMenuInsertReq:
    properties:
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      createBy:
        type: integer
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 编码
        type: integer
      menuName:
        description: 菜单name
        type: string
      menuType:
        description: 菜单类型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级菜单
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 权限编码
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 显示名称
        type: string
      updateBy:
        type: integer
      visible:
        description: 是否显示
        type: boolean
    type: object
  dto.SysMenuUpdateReq:
    properties:
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      createBy:
        type: integer
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 编码
        type: integer
      menuName:
        description: 菜单name
        type: string
      menuType:
        description: 菜单类型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级菜单
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 权限编码
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 显示名称
        type: string
      updateBy:
        type: integer
      visible:
        description: 是否显示
        type: boolean
    type: object
  dto.SysPostDeleteReq:
    properties:
      createBy:
        type: integer
      ids:
        items:
          type: integer
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysPostInsertReq:
    properties:
      createBy:
        type: integer
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysPostUpdateReq:
    properties:
      createBy:
        type: integer
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updateBy:
        type: integer
    type: object
  dto.SysRequestLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysRoleDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysRoleInsertReq:
    properties:
      admin:
        type: boolean
      createBy:
        type: integer
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 标记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 状态
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysRoleUpdateReq:
    properties:
      admin:
        type: boolean
      createBy:
        type: integer
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 标记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 状态
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      updateBy:
        type: integer
    type: object
  dto.SysUserInsertReq:
    properties:
      avatar:
        type: string
      createBy:
        type: integer
      deptId:
        type: integer
      email:
        type: string
      nickName:
        type: string
      password:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleId:
        type: integer
      sex:
        type: string
      status:
        default: "1"
        type: string
      updateBy:
        type: integer
      userId:
        description: 用户ID
        type: integer
      username:
        type: string
    type: object
  dto.SysUserUpdateReq:
    properties:
      avatar:
        type: string
      createBy:
        type: integer
      deptId:
        type: integer
      email:
        type: string
      nickName:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleId:
        type: integer
      sex:
        type: string
      status:
        default: "1"
        type: string
      updateBy:
        type: integer
      userId:
        description: 用户ID
        type: integer
      username:
        type: string
    type: object
  dto.Tag:
    properties:
      key:
        type: string
      label:
        type: string
    type: object
  dto.TbCmsArticleInsertReq:
    properties:
      author:
        description: 作者
        type: string
      category:
        description: 分类
        type: string
      content:
        description: 内容
        type: string
      createBy:
        type: integer
      file:
        description: 上传文件路径
        type: string
      mark:
        description: 页面标记
        type: string
      pubTime:
        description: 发布时间
        type: string
      source:
        description: 引用来源
        type: string
      title:
        description: 页面名称
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsArticleUpdateReq:
    properties:
      author:
        description: 作者
        type: string
      category:
        description: 分类
        type: string
      content:
        description: 内容
        type: string
      createBy:
        type: integer
      file:
        description: 上传文件路径
        type: string
      id:
        description: 主键编码
        type: integer
      mark:
        description: 页面标记
        type: string
      pubTime:
        description: 发布时间
        type: string
      source:
        description: 引用来源
        type: string
      title:
        description: 页面名称
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsFriendlinkInsertReq:
    properties:
      createBy:
        type: integer
      link:
        description: 链接地址
        type: string
      name:
        description: 链接名称
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsFriendlinkUpdateReq:
    properties:
      createBy:
        type: integer
      id:
        description: 主键编码
        type: integer
      link:
        description: 链接地址
        type: string
      name:
        description: 链接名称
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsMenuInsertReq:
    properties:
      createBy:
        type: integer
      link:
        description: 引用表的id，或者mark
        type: string
      name:
        description: 页面名称
        type: string
      parent:
        description: 父节点
        type: string
      type:
        description: 菜单类型，list列表，page详情页
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsMenuUpdateReq:
    properties:
      createBy:
        type: integer
      id:
        description: 主键编码
        type: integer
      link:
        description: 引用表的id，或者mark
        type: string
      name:
        description: 页面名称
        type: string
      parent:
        description: 父节点
        type: string
      type:
        description: 菜单类型，list列表，page详情页
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsPageInsertReq:
    properties:
      author:
        description: 作者
        type: string
      content:
        description: 内容
        type: string
      createBy:
        type: integer
      mark:
        description: 页面标记
        type: string
      pubTime:
        description: 发布时间
        type: string
      source:
        description: 引用来源
        type: string
      title:
        description: 页面名称
        type: string
      updateBy:
        type: integer
    type: object
  dto.TbCmsPageUpdateReq:
    properties:
      author:
        description: 作者
        type: string
      content:
        description: 内容
        type: string
      createBy:
        type: integer
      id:
        description: 主键编码
        type: integer
      mark:
        description: 页面标记
        type: string
      pubTime:
        description: 发布时间
        type: string
      source:
        description: 引用来源
        type: string
      title:
        description: 页面名称
        type: string
      updateBy:
        type: integer
    type: object
  dto.TreeNode:
    properties:
      children:
        items:
          $ref: '#/definitions/dto.TreeNode'
        type: array
      childrenCount:
        type: integer
      data:
        additionalProperties: {}
        type: object
      entityId:
        type: string
      id:
        type: string
      labels:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  dto.UpdateStatusReq:
    properties:
      createBy:
        type: integer
      roleId:
        description: 角色编码
        type: integer
      status:
        description: 状态
        type: string
      updateBy:
        type: integer
    type: object
  dto.UpdateSysUserStatusReq:
    properties:
      createBy:
        type: integer
      status:
        type: string
      updateBy:
        type: integer
      userId:
        description: 用户ID
        type: integer
    type: object
  go-admin_app_admin_models.SysAbnormalLog:
    properties:
      abFunc:
        type: string
      abId:
        type: integer
      abInfo:
        type: string
      abSource:
        type: string
      body:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      headers:
        type: string
      ip:
        type: string
      method:
        type: string
      resp:
        type: string
      stackTrace:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
      url:
        type: string
      userId:
        type: integer
      userName:
        type: string
    type: object
  go-admin_app_admin_models.SysApi:
    properties:
      bus:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      func:
        type: string
      handle:
        type: string
      id:
        type: integer
      isHistory:
        type: boolean
      method:
        type: string
      name:
        type: string
      path:
        type: string
      project:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysConfig:
    properties:
      configKey:
        type: string
      configModule:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      isFrontend:
        type: boolean
      isSecret:
        type: boolean
      remark:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysDept:
    properties:
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      createBy:
        type: integer
      createdAt:
        type: string
      dataScope:
        type: string
      deptId:
        description: 部门编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysMenu:
    properties:
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      component:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      dataScope:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
      visible:
        type: boolean
    type: object
  go-admin_app_admin_models.SysOperateLog:
    properties:
      createBy:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      logId:
        type: integer
      type:
        type: string
      updateAfter:
        type: string
      updateBefore:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
      userName:
        type: string
    type: object
  go-admin_app_jobs_models.SysJob:
    properties:
      args:
        description: 目标参数
        type: string
      concurrent:
        description: 是否并发
        type: integer
      createBy:
        type: integer
      createdAt:
        type: string
      cronExpression:
        description: cron表达式
        type: string
      dataScope:
        type: string
      entryId:
        description: job启动时返回的id
        type: integer
      invokeTarget:
        description: 调用目标
        type: string
      jobGroup:
        description: 任务分组
        type: string
      jobId:
        description: 编码
        type: integer
      jobName:
        description: 名称
        type: string
      jobType:
        description: 任务类型
        type: integer
      misfirePolicy:
        description: 执行策略
        type: integer
      status:
        description: 状态
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  handler.Login:
    properties:
      code:
        type: string
      password:
        type: string
      type:
        type: string
      username:
        type: string
      uuid:
        type: string
    required:
    - code
    - password
    - username
    - uuid
    type: object
  models.TbCmsArticle:
    properties:
      author:
        type: string
      category:
        type: string
      content:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      file:
        type: string
      id:
        type: integer
      mark:
        type: string
      pubTime:
        type: string
      source:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.TbCmsFriendlink:
    properties:
      createBy:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      link:
        type: string
      name:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.TbCmsMenu:
    properties:
      createBy:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      link:
        type: string
      name:
        type: string
      parent:
        type: string
      type:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  models.TbCmsPage:
    properties:
      author:
        type: string
      content:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      mark:
        type: string
      pubTime:
        type: string
      source:
        type: string
      title:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
  tools.Params:
    properties:
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
    type: object
  tools.SysColumns:
    properties:
      columnComment:
        type: string
      columnId:
        type: integer
      columnName:
        type: string
      columnType:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      dictType:
        type: string
      edit:
        type: boolean
      fkCol:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      fkLabelId:
        type: string
      fkLabelName:
        type: string
      fkTableName:
        type: string
      fkTableNameClass:
        type: string
      fkTableNamePackage:
        type: string
      goField:
        type: string
      goType:
        type: string
      htmlType:
        type: string
      increment:
        type: boolean
      insert:
        type: boolean
      isEdit:
        type: string
      isIncrement:
        type: string
      isInsert:
        type: string
      isList:
        type: string
      isPk:
        type: string
      isQuery:
        type: string
      isRequired:
        type: string
      jsonField:
        type: string
      list:
        type: string
      pk:
        type: boolean
      query:
        type: boolean
      queryType:
        type: string
      remark:
        type: string
      required:
        type: boolean
      sort:
        type: integer
      superColumn:
        type: boolean
      tableId:
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
      usableColumn:
        type: boolean
    type: object
  tools.SysTables:
    properties:
      businessName:
        type: string
      className:
        description: 类名
        type: string
      columns:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      createBy:
        type: integer
      createdAt:
        type: string
      crud:
        type: boolean
      dataScope:
        type: string
      deletedAt:
        type: string
      functionAuthor:
        description: 功能作者
        type: string
      functionName:
        description: 功能名称
        type: string
      isActions:
        type: integer
      isAuth:
        type: integer
      isDataScope:
        type: integer
      isLogicalDelete:
        type: string
      logicalDelete:
        type: boolean
      logicalDeleteColumn:
        type: string
      moduleFrontName:
        description: 前端文件名
        type: string
      moduleName:
        description: go文件名
        type: string
      options:
        type: string
      packageName:
        description: 包名
        type: string
      params:
        $ref: '#/definitions/tools.Params'
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        type: string
      tableComment:
        description: 表备注
        type: string
      tableId:
        description: 表编码
        type: integer
      tableName:
        description: 表名称
        type: string
      tplCategory:
        type: string
      tree:
        type: boolean
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      updateBy:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: 朗链图数据权限管理系统的接口文档
  license:
    name: MIT
    url: https://github.com/go-admin-team/go-admin/blob/master/LICENSE.md
  title: GraphAdmin
  version: 1.0.0
paths:
  /api/v1/app-config:
    get:
      description: 获取系统配置信息，主要注意这里不在验证权限
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 获取系统前台配置信息，主要注意这里不在验证权限
      tags:
      - 配置管理
  /api/v1/captcha:
    get:
      description: 获取验证码
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  type: string
                id:
                  type: string
                msg:
                  type: string
              type: object
      summary: 获取验证码
      tags:
      - 登陆
  /api/v1/db/columns/page:
    get:
      description: 数据库表列分页列表 / database table column page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/db/tables/page:
    get:
      description: 数据库表分页列表 / database table page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/dept:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptDeleteReq'
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 删除部门
      tags:
      - 部门
    get:
      description: 分页列表
      parameters:
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: deptId
        in: query
        name: deptId
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 分页部门列表数据
      tags:
      - 部门
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptInsertReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加部门
      tags:
      - 部门
  /api/v1/dept/{deptId}:
    get:
      description: 获取JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取部门数据
      tags:
      - 部门
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptUpdateReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改部门
      tags:
      - 部门
  /api/v1/dict-data/option-select:
    get:
      description: 数据字典根据key获取
      parameters:
      - description: dictType
        in: query
        name: dictType
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SysDictDataGetAllResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 数据字典根据key获取
      tags:
      - 字典数据
  /api/v1/dict/data:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除字典数据
      tags:
      - 字典数据
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 字典数据列表
      tags:
      - 字典数据
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 添加字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/{dictCode}:
    get:
      description: 获取JSON
      parameters:
      - description: 字典编码
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 通过编码获取字典数据
      tags:
      - 字典数据
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改字典数据
      tags:
      - 字典数据
  /api/v1/dict/type:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除字典类型
      tags:
      - 字典类型
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 字典类型列表数据
      tags:
      - 字典类型
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 添加字典类型
      tags:
      - 字典类型
  /api/v1/dict/type-option-select:
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 字典类型全部数据 代码生成使用接口
      tags:
      - 字典类型
  /api/v1/dict/type/{dictId}:
    get:
      description: 获取JSON
      parameters:
      - description: 字典类型编码
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 字典类型通过字典id获取
      tags:
      - 字典类型
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改字典类型
      tags:
      - 字典类型
  /api/v1/getinfo:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取个人信息
      tags:
      - 个人中心
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: |-
        获取token
        LoginHandler can be used by clients to get a jwt token.
        Payload needs to be json in the form of {"username": "USERNAME", "password": "PASSWORD"}.
        Reply will be of the form {"token": "TOKEN"}.
        dev mode：It should be noted that all fields cannot be empty, and a value of 0 can be passed in addition to the account password
        注意：开发模式：需要注意全部字段不能为空，账号密码外可以传入0值
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/handler.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: 登陆
      tags:
      - 登陆
  /api/v1/menu:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - 菜单
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建菜单
      tags:
      - 菜单
  /api/v1/menu/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: Menu详情数据
      tags:
      - 菜单
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改菜单
      tags:
      - 菜单
  /api/v1/menuTreeselect/{roleId}:
    get:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 角色修改使用的菜单列表
      tags:
      - 菜单
  /api/v1/menurole:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 根据登录角色名称获取菜单列表数据（左菜单使用）
      tags:
      - 菜单
  /api/v1/post:
    delete:
      description: 删除数据
      parameters:
      - description: 请求参数
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            type: string
        "500":
          description: '{"code": 500, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 删除岗位
      tags:
      - 岗位
    get:
      description: 获取JSON
      parameters:
      - description: postName
        in: query
        name: postName
        type: string
      - description: postCode
        in: query
        name: postCode
        type: string
      - description: postId
        in: query
        name: postId
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 岗位列表数据
      tags:
      - 岗位
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostInsertReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加岗位
      tags:
      - 岗位
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改岗位
      tags:
      - 岗位
  /api/v1/post-option:
    get:
      description: Get JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 职位下拉框数据
      tags:
      - 职位/Post
  /api/v1/post/{postId}:
    get:
      description: 获取JSON
      parameters:
      - description: 编码
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取岗位信息
      tags:
      - 岗位
  /api/v1/public/uploadFile:
    post:
      consumes:
      - multipart/form-data
      description: 获取JSON
      parameters:
      - description: type
        in: query
        name: type
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 上传图片
      tags:
      - 公共接口
  /api/v1/role:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除用户角色
      tags:
      - 角色/Role
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 角色列表数据
      tags:
      - 角色/Role
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建角色
      tags:
      - 角色/Role
  /api/v1/role-option:
    get:
      description: Get JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 角色下拉框数据
      tags:
      - 角色/Role
  /api/v1/role-status:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateStatusReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改用户角色
      tags:
      - 角色/Role
  /api/v1/role-status/{id}:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleDataScopeReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 更新角色数据权限
      tags:
      - 角色/Role
  /api/v1/role/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取Role数据
      tags:
      - 角色/Role
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改用户角色
      tags:
      - 角色/Role
  /api/v1/server-monitor:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 系统信息
      tags:
      - 系统信息
  /api/v1/set-config:
    get:
      consumes:
      - application/json
      description: 界面操作设置配置值的获取
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 界面操作设置配置值
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.GetSetSysConfigReq'
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 设置配置
      tags:
      - 配置管理
  /api/v1/sys-abnormal-log:
    delete:
      description: 删除异常日志
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除异常日志
      tags:
      - 异常日志
    get:
      description: 获取异常日志列表
      parameters:
      - description: 编码
        in: query
        name: abId
        type: integer
      - description: 请求方式
        in: query
        name: method
        type: string
      - description: 请求地址
        in: query
        name: url
        type: string
      - description: ip
        in: query
        name: ip
        type: string
      - description: 异常信息
        in: query
        name: abInfo
        type: string
      - description: 异常来源
        in: query
        name: abSource
        type: string
      - description: 异常方法
        in: query
        name: abFunc
        type: string
      - description: 用户id
        in: query
        name: userId
        type: integer
      - description: 操作人
        in: query
        name: userName
        type: string
      - description: 请求头
        in: query
        name: headers
        type: string
      - description: 请求数据
        in: query
        name: body
        type: string
      - description: 回调数据
        in: query
        name: resp
        type: string
      - description: 堆栈追踪
        in: query
        name: stackTrace
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysAbnormalLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取异常日志列表
      tags:
      - 异常日志
  /api/v1/sys-abnormal-log/{id}:
    get:
      description: 获取异常日志
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_admin_models.SysAbnormalLog'
              type: object
      security:
      - Bearer: []
      summary: 获取异常日志
      tags:
      - 异常日志
  /api/v1/sys-api:
    delete:
      description: 删除接口管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除接口管理
      tags:
      - 接口管理
    get:
      description: 获取接口管理列表
      parameters:
      - description: 名称
        in: query
        name: name
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 地址
        in: query
        name: path
        type: string
      - description: 类型
        in: query
        name: action
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取接口管理列表
      tags:
      - 接口管理
  /api/v1/sys-api/{id}:
    get:
      description: 获取接口管理
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_admin_models.SysApi'
              type: object
      security:
      - Bearer: []
      summary: 获取接口管理
      tags:
      - 接口管理
    put:
      consumes:
      - application/json
      description: 修改接口管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改接口管理
      tags:
      - 接口管理
  /api/v1/sys-api/list:
    get:
      description: 获取接口列表配置菜单接口使用
      parameters:
      - description: 名称
        in: query
        name: name
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 地址
        in: query
        name: path
        type: string
      - description: 类型
        in: query
        name: action
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取接口列表配置菜单接口使用
      tags:
      - 接口管理
  /api/v1/sys-config:
    delete:
      description: 删除配置管理
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除配置管理
      tags:
      - 配置管理
    get:
      description: 获取配置管理列表
      parameters:
      - description: 名称
        in: query
        name: configName
        type: string
      - description: key
        in: query
        name: configKey
        type: string
      - description: 类型
        in: query
        name: configType
        type: string
      - description: 是否前端
        in: query
        name: isFrontend
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取配置管理列表
      tags:
      - 配置管理
    post:
      consumes:
      - application/json
      description: 创建配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "创建成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建配置管理
      tags:
      - 配置管理
  /api/v1/sys-config/{id}:
    get:
      description: 根据Key获取SysConfig的Service
      parameters:
      - description: configKey
        in: path
        name: configKey
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysConfigByKeyReq'
              type: object
      security:
      - Bearer: []
      summary: 根据Key获取SysConfig的Service
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 修改配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改配置管理
      tags:
      - 配置管理
  /api/v1/sys-job:
    get:
      description: 获取列表
      parameters:
      - description: jobName
        in: query
        name: jobName
        type: string
      - description: jobGroup
        in: query
        name: jobGroup
        type: string
      - description: jobType
        in: query
        name: jobType
        type: string
      - description: cronExpression
        in: query
        name: cronExpression
        type: string
      - description: invokeTarget
        in: query
        name: invokeTarget
        type: string
      - description: args
        in: query
        name: args
        type: string
      - description: misfirePolicy
        in: query
        name: misfirePolicy
        type: integer
      - description: concurrent
        in: query
        name: concurrent
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: entryId
        in: query
        name: entryId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_jobs_models.SysJob'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取列表
      tags:
      - ""
    post:
      consumes:
      - application/json
      description: 创建
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysJobInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建
      tags:
      - ""
  /api/v1/sys-job/{id}:
    delete:
      description: 删除
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除
      tags:
      - ""
    get:
      description: 获取
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_jobs_models.SysJob'
              type: object
      security:
      - Bearer: []
      summary: 获取
      tags:
      - ""
    put:
      consumes:
      - application/json
      description: 修改
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysJobUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改
      tags:
      - ""
  /api/v1/sys-login-log:
    delete:
      description: 登录日志删除
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysLoginLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 登录日志删除
      tags:
      - 登录日志
    get:
      description: 获取JSON
      parameters:
      - description: 用户名
        in: query
        name: username
        type: string
      - description: ip地址
        in: query
        name: ipaddr
        type: string
      - description: 归属地
        in: query
        name: loginLocation
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      - description: 开始时间
        in: query
        name: beginTime
        type: string
      - description: 结束时间
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 登录日志列表
      tags:
      - 登录日志
  /api/v1/sys-login-log/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 登录日志通过id获取
      tags:
      - 登录日志
  /api/v1/sys-operate-log:
    delete:
      description: 删除操作日志
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除操作日志
      tags:
      - 操作日志
    get:
      description: 获取操作日志列表
      parameters:
      - description: 编码
        in: query
        name: logId
        type: integer
      - description: 操作类型
        in: query
        name: type
        type: string
      - description: 操作说明
        in: query
        name: description
        type: string
      - description: 用户
        in: query
        name: userName
        type: string
      - description: 用户id
        in: query
        name: userId
        type: integer
      - description: 更新前
        in: query
        name: updateBefore
        type: string
      - description: 更新后
        in: query
        name: updateAfter
        type: string
      - description: 创建人
        in: query
        name: createBy
        type: integer
      - description: 最后更新人
        in: query
        name: updateBy
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysOperateLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取操作日志列表
      tags:
      - 操作日志
  /api/v1/sys-operate-log/{id}:
    get:
      description: 获取操作日志
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_admin_models.SysOperateLog'
              type: object
      security:
      - Bearer: []
      summary: 获取操作日志
      tags:
      - 操作日志
  /api/v1/sys-request-log:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRequestLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除操作日志
      tags:
      - 操作日志
    get:
      description: 获取JSON
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: method
        in: query
        name: method
        type: string
      - description: requestMethod
        in: query
        name: requestMethod
        type: string
      - description: operUrl
        in: query
        name: operUrl
        type: string
      - description: operIp
        in: query
        name: operIp
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: beginTime
        in: query
        name: beginTime
        type: string
      - description: endTime
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 操作日志列表
      tags:
      - 操作日志
  /api/v1/sys-request-log/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 操作日志通过id获取
      tags:
      - 操作日志
  /api/v1/sys-user:
    get:
      description: 获取JSON
      parameters:
      - description: username
        in: query
        name: username
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 列表用户信息数据
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建用户
      tags:
      - 用户
  /api/v1/sys-user/{userId}:
    delete:
      description: 删除数据
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除用户数据
      tags:
      - 用户
    get:
      description: 获取JSON
      parameters:
      - description: 用户编码
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取用户
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改用户数据
      tags:
      - 用户
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加表结构
      tags:
      - 工具 / 生成工具
    put:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tools.SysTables'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改表结构
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/info/{tableId}:
    delete:
      description: 删除表结构
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除表结构
      tags:
      - 工具 / 生成工具
    get:
      description: 获取JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/page:
    get:
      description: 生成表分页列表
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      summary: 分页列表数据
      tags:
      - 工具 / 生成工具
  /api/v1/tb-cms-article:
    delete:
      description: 删除
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除
      tags:
      - ""
    get:
      description: 获取列表
      parameters:
      - description: 主键编码
        in: query
        name: id
        type: integer
      - description: 页面名称
        in: query
        name: title
        type: string
      - description: 页面标记
        in: query
        name: mark
        type: string
      - description: 引用来源
        in: query
        name: source
        type: string
      - description: 作者
        in: query
        name: author
        type: string
      - description: 分类
        in: query
        name: category
        type: string
      - description: 内容
        in: query
        name: content
        type: string
      - description: 上传文件路径
        in: query
        name: file
        type: string
      - description: 创建者
        in: query
        name: createBy
        type: integer
      - description: 更新者
        in: query
        name: updateBy
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.TbCmsArticle'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取列表
      tags:
      - ""
    post:
      consumes:
      - application/json
      description: 创建
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsArticleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建
      tags:
      - ""
  /api/v1/tb-cms-article/{id}:
    get:
      description: 获取
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TbCmsArticle'
              type: object
      security:
      - Bearer: []
      summary: 获取
      tags:
      - ""
    put:
      consumes:
      - application/json
      description: 修改
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsArticleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改
      tags:
      - ""
  /api/v1/tb-cms-friendlink:
    delete:
      description: 删除
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除
      tags:
      - ""
    get:
      description: 获取列表
      parameters:
      - description: 主键编码
        in: query
        name: id
        type: integer
      - description: 链接名称
        in: query
        name: name
        type: string
      - description: 链接地址
        in: query
        name: link
        type: string
      - description: 创建者
        in: query
        name: createBy
        type: integer
      - description: 更新者
        in: query
        name: updateBy
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.TbCmsFriendlink'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取列表
      tags:
      - ""
    post:
      consumes:
      - application/json
      description: 创建
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsFriendlinkInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建
      tags:
      - ""
  /api/v1/tb-cms-friendlink/{id}:
    get:
      description: 获取
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TbCmsFriendlink'
              type: object
      security:
      - Bearer: []
      summary: 获取
      tags:
      - ""
    put:
      consumes:
      - application/json
      description: 修改
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsFriendlinkUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改
      tags:
      - ""
  /api/v1/tb-cms-menu:
    delete:
      description: 删除
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除
      tags:
      - ""
    get:
      description: 获取列表
      parameters:
      - description: 主键编码
        in: query
        name: id
        type: integer
      - description: 页面名称
        in: query
        name: name
        type: string
      - description: 菜单类型，list列表，page详情页
        in: query
        name: type
        type: string
      - description: 引用表的id，或者mark
        in: query
        name: link
        type: string
      - description: 父节点
        in: query
        name: parent
        type: string
      - description: 创建者
        in: query
        name: createBy
        type: integer
      - description: 更新者
        in: query
        name: updateBy
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.TbCmsMenu'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取列表
      tags:
      - ""
    post:
      consumes:
      - application/json
      description: 创建
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsMenuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建
      tags:
      - ""
  /api/v1/tb-cms-menu/{id}:
    get:
      description: 获取
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TbCmsMenu'
              type: object
      security:
      - Bearer: []
      summary: 获取
      tags:
      - ""
    put:
      consumes:
      - application/json
      description: 修改
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsMenuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改
      tags:
      - ""
  /api/v1/tb-cms-page:
    delete:
      description: 删除
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 删除
      tags:
      - ""
    get:
      description: 获取列表
      parameters:
      - description: 主键编码
        in: query
        name: id
        type: integer
      - description: 页面名称
        in: query
        name: title
        type: string
      - description: 页面标记
        in: query
        name: mark
        type: string
      - description: 引用来源
        in: query
        name: source
        type: string
      - description: 作者
        in: query
        name: author
        type: string
      - description: 内容
        in: query
        name: content
        type: string
      - description: 创建者
        in: query
        name: createBy
        type: integer
      - description: 更新者
        in: query
        name: updateBy
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/antd.Pages'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.TbCmsPage'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取列表
      tags:
      - ""
    post:
      consumes:
      - application/json
      description: 创建
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsPageInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 创建
      tags:
      - ""
  /api/v1/tb-cms-page/{id}:
    get:
      description: 获取
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TbCmsPage'
              type: object
      security:
      - Bearer: []
      summary: 获取
      tags:
      - ""
    put:
      consumes:
      - application/json
      description: 修改
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.TbCmsPageUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改
      tags:
      - ""
  /api/v1/user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 获取JSON
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改头像
      tags:
      - 个人中心
  /api/v1/user/current:
    get:
      consumes:
      - application/json
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/antd.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.Personal'
              type: object
      security:
      - Bearer: []
      summary: 获取当前用户信息
      tags:
      - 个人中心/UserCenter
  /api/v1/user/profile:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 获取个人中心数据
      tags:
      - 个人中心
  /api/v1/user/pwd/reset:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ResetSysUserPwdReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 重置用户密码
      tags:
      - 用户
  /api/v1/user/pwd/set:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PassWord'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 用户
  /api/v1/user/status:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSysUserStatusReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/antd.Response'
      security:
      - Bearer: []
      summary: 修改用户状态
      tags:
      - 用户
  /dev-api/v1/graph/link/net/children:
    get:
      parameters:
      - description: Node id
        in: query
        name: id
        required: true
        type: string
      - description: Page size
        in: query
        name: pageSize
        required: true
        type: string
      - description: Page number
        in: query
        name: pageNum
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Net'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过id检索节点的子节点
      tags:
      - 图谱/网状图
  /dev-api/v1/graph/link/net/expand:
    get:
      parameters:
      - description: Depth of expansion
        in: query
        name: depth
        required: true
        type: string
      - description: Limit of each depth
        in: query
        name: limit
        required: true
        type: string
      - description: Source node id
        in: query
        name: sourceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Net'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过给定节点和给定延伸层数检索延伸出的关联子节点，
      tags:
      - 图谱/网状图
  /dev-api/v1/graph/link/net/parents:
    get:
      parameters:
      - description: Node id
        in: query
        name: id
        required: true
        type: string
      - description: Page size
        in: query
        name: pageSize
        required: true
        type: string
      - description: Page number
        in: query
        name: pageNum
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Net'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过id检索节点的父节点
      tags:
      - 图谱/网状图
  /dev-api/v1/graph/link/node:
    get:
      parameters:
      - description: Node id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LinkNode'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过id检索节点
      tags:
      - 图谱/网状图
  /dev-api/v1/graph/link/node/root:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LinkNode'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 获取网状图的根节点
      tags:
      - 图谱/网状图
  /dev-api/v1/graph/tree/node:
    get:
      parameters:
      - description: Node ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TreeNode'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过id检索单个节点
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/node/children:
    get:
      parameters:
      - description: Node ID
        in: query
        name: id
        required: true
        type: string
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Page number
        in: query
        name: pageNum
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TreeNode'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 检索给定节点的子节点
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/node/company/title/autoComplete:
    get:
      parameters:
      - description: Keyword to search for
        in: query
        name: keyWord
        required: true
        type: string
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Page number
        in: query
        name: pageNum
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过给定的关键词检索模糊匹配的公司名称列表
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/node/label/title/autoComplete:
    get:
      parameters:
      - description: Keyword to search for
        in: query
        name: keyWord
        required: true
        type: string
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Page number
        in: query
        name: pageNum
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过给定的关键词检索模糊匹配的标签名称列表
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/node/root:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TreeNode'
        "204":
          description: No Content
          schema:
            type: string
      summary: 查询标签树的根节点
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/path/between:
    get:
      parameters:
      - description: Source label ID, default to root label ID
        in: query
        name: sourceId
        type: string
      - description: Target label ID
        in: query
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 获取标签数图中两个节点之间的路径
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/path/company/title/fuzzyMatch:
    get:
      parameters:
      - description: Source label ID, default to root label ID
        in: query
        name: sourceId
        type: string
      - description: Target label ID
        in: query
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过公司名称关键词模糊匹配公司节点
      tags:
      - 图谱/树状图
  /dev-api/v1/graph/tree/path/label/title/fuzzyMatch:
    get:
      parameters:
      - description: Source label ID, default to root label ID
        in: query
        name: sourceId
        type: string
      - description: Target label ID
        in: query
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 通过标签名称关键词模糊匹配标签节点
      tags:
      - 图谱/树状图
  /logout:
    post:
      consumes:
      - application/json
      description: 获取token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 退出登录
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
